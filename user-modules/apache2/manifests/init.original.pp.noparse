class apache2 {

	define site( $ssl = false, $sitedomain = "", $documentroot = "" ) {
		include apache2
		if $sitedomain == "" {
			$vhost_domain = $name
		} else {
			$vhost_domain = $sitedomain
		}
		if $documentroot == "" {
			$vhost_root = "/var/www/${name}"
		} else {
			$vhost_root = $documentroot
		}

if $ssl == true {

# create pkey
ssl_pkey { '/etc/apache2/ssl/${vhost_domain}.key' }

# create certificate
x509_cert { '/etc/apache2/ssl/${vhost_domain}.crt' }
		
}


} else {

}
		file { "/etc/apache2/sites-available/${vhost_domain}.conf":
				content => template("apache2/vhost.erb"),
				require => File["/etc/apache2/conf.d/name-based-vhosts.conf"],
				notify => Exec["enable-${vhost_domain}-vhost"],
		}
		exec { "enable-${vhost_domain}-vhost":
			command => "/usr/sbin/a2ensite ${vhost_domain}.conf",
			require => [ File["/etc/apache2/sites-available/${vhost_domain}.conf"], 
			Package["apache2"] ],
			refreshonly => true,
			notify => Service["apache2"],
		}
	}


	define snippet() {
		file { 
		  "/etc/apache2/conf.d/${name}":
	            source => "puppet:///modules/apache/${name}",
		    notify => Service["apache2"],
		}
	}

	package {
	  "apache2" : 
	    ensure => present
	}
	
	service {
	  "apache2":
	    ensure    => true,
	    enable    => true,
            require   => Package["apache2"]
	}

        file {
          "/etc/apache2/logs":
            ensure  => directory,
            require => Package["apache2"],
	}

	file {
	  "/etc/apache2/conf.d/name-based-vhosts.conf":
	    content => "NameVirtualHost *:80",
	    owner   => root,
	    group   => root,
	    notify  => Service["apache2"],
	    require => Package["apache2"];
	}

exec {
 "-${vhost_domain}-vhost":
command => "a2enmod ssl",
require => Package["apache2"],
notify => Service["apache2"]
}

file {
"/etc/apache2/ssl":
ensure => "directory",
owner => "root"
}

}
